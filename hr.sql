--1. 사원번호가 176인 사원의 LAST_NAME, 부서번호 정보 조회
SELECT
	LAST_NAME,
	DEPARTMENT_ID
FROM
	EMPLOYEES e
WHERE
	EMPLOYEE_ID = 176;
--2. 급여가 12000 이상 되는 직원들의 LAST_NAME, 급여 조회
SELECT
	LAST_NAME,
	SALARY
FROM
	EMPLOYEES e
WHERE
	SALARY >= 12000;
--3. 급여의 범위가 5000 ~ 12000이 아닌 사람들의 LAST_NAME, 급여 조회
SELECT
	LAST_NAME,
	SALARY
FROM
	EMPLOYEES e
WHERE
	SALARY > 12000
	OR SALARY < 5000;

--4. 20번 및 50번 부서에 근무하는 사원들의 LAST_NAME, 부서번호 조회 (이름 오름차순, 부서번호 오름차순)
SELECT
	e.LAST_NAME,
	e.DEPARTMENT_ID
FROM
	EMPLOYEES e
WHERE
	e.DEPARTMENT_ID IN (20, 50)
ORDER BY
	LAST_NAME ASC,
	DEPARTMENT_ID ASC;

--5. 커미션을 받는 모든 사원들의 LAST_NAME, 급여, 커미션 조회 (급여 내림차순, 커미션 내림차순)
SELECT
	e.LAST_NAME,
	e.SALARY ,
	e.COMMISSION_PCT
FROM
	EMPLOYEES e
WHERE
	e.COMMISSION_PCT >0
ORDER BY
	e.SALARY DESC,
	e.COMMISSION_PCT DESC;

--6. 급여가 2500, 3500, 7000이 아니며 직무가 SA_REP, ST_CLERK 인 사원조회
SELECT
	*
FROM
	EMPLOYEES e
WHERE
	e.SALARY NOT IN (2500, 3500, 7000)
	AND e.JOB_ID IN ('SA_REP', 'ST_CLERK'); 

--7. 2015/02/20 ~ 2015/05/01 사이에 고용된 사원들의 LAST_NAME, 사번, 고용일자 조회(고용일차 내림차순)
SELECT
	e.LAST_NAME ,
	e.EMPLOYEE_ID ,
	e.HIRE_DATE
FROM
	EMPLOYEES e
WHERE
	e.HIRE_DATE BETWEEN '2015/02/20' AND '2015/05/01'
ORDER BY
	e.HIRE_DATE DESC; 

--8. 20번, 50번 부서 사원중에 연봉이 5000~12000인 사원의 LAST_NAME, 급여를 조회 (급여 오름차순)
SELECT
	e.LAST_NAME,
	e.SALARY
FROM
	EMPLOYEES e
WHERE
	e.DEPARTMENT_ID IN (20, 50)
	AND e.SALARY BETWEEN 5000 AND 12000 ORDER BY e.SALARY ASC;

--9. 연봉이 5000~ 12000 이 아닌 사원들의 LAST_NAME, 급여를 조회 (급여 오름차순)
SELECT
	e.LAST_NAME ,
	e.SALARY
FROM
	EMPLOYEES e
WHERE
	e.SALARY NOT BETWEEN 5000 AND 12000
ORDER BY
	e.SALARY ASC;

--10. 2015/02/20 ~ 2015/05/01에 고용된 사원들의 LAST_NAME, 사번, 고용일자 조회(고용일자 내림차순)
SELECT
	e.LAST_NAME ,
	e.EMPLOYEE_ID ,
	e.HIRE_DATE
FROM
	EMPLOYEES e
WHERE
	e.HIRE_DATE BETWEEN '2015/02/20' AND '2015/05/01'
ORDER BY
	e.HIRE_DATE DESC; 

--11. LAST_NAME에 u가 포함되는 사원들의 사번, LAST_NAME 조회
SELECT
	e.EMPLOYEE_ID ,
	e.LAST_NAME
FROM
	EMPLOYEES e
WHERE
	e.LAST_NAME LIKE '%u%';

--12. LAST_NAME의 4번째 글자가 a인 사원들의 LAST_NAME 조회
SELECT
	e.LAST_NAME
FROM
	EMPLOYEES e
WHERE
	e.LAST_NAME LIKE '___a%';

--13. LAST_NAME에 a 혹은 e 글자가 있는 사원들의 LAST_NAME 조회 (LAST_NAME 오름차순)
SELECT
	e.LAST_NAME
FROM
	EMPLOYEES e
WHERE
	e.LAST_NAME LIKE '%a%'
	OR e.LAST_NAME LIKE '%e%'
ORDER BY
	e.LAST_NAME ASC ; 

--14. LAST_NAME에 a, e 글자가 모두 포함된 사원들의 LAST_NAME을 조회 (LAST_NAME 오름차순)
SELECT
	e.LAST_NAME
FROM
	EMPLOYEES e
WHERE
	e.LAST_NAME LIKE '%a%e%'
	OR e.LAST_NAME LIKE '%e%a%'
ORDER BY
	e.LAST_NAME ASC ; 

--15. 매니저 ID가 없는 사원의 LAST_NAME, JOB_ID을 조회
SELECT
	e.LAST_NAME,
	e.JOB_ID
FROM
	EMPLOYEES e
WHERE
	e.MANAGER_ID IS NULL; 

--16. 직무가 ST_CLERK인 사원이 근무하고 있지 않은 부서ID를 조회, 단 부서번호가 NULL인 것은 제외
SELECT DISTINCT 
	e.DEPARTMENT_ID
FROM
	EMPLOYEES e
WHERE
	e.JOB_ID NOT IN ('ST_CLERK')
	AND e.DEPARTMENT_ID IS NOT NULL;
--17. COMMISSION_PCT 가 NULL이 아닌 사원들 중에서 COMMISSION= SALARY*COMMSION_PCT를 구하고 사번, FIRST_NAME, JOB_ID 함께 조회
SELECT  
	e.EMPLOYEE_ID , e.FIRST_NAME , e.JOB_ID , e.SALARY *e.COMMISSION_PCT AS COMMISSION
FROM
	EMPLOYEES e
WHERE
	e.COMMISSION_PCT IS NOT NULL;

-- 함수
-- 18. FIRST_NAME이 Curtis 인 사람의 FIRST_NAME, LAST_NAME, EMAIL, PHONE_NUMBER, JOB_ID 조회 단, JOB_ID는 소문자로
SELECT
	e.FIRST_NAME ,
	e.LAST_NAME ,
	e.EMAIL ,
	e.PHONE_NUMBER ,
	LOWER(e.JOB_ID)
FROM
	EMPLOYEES e
WHERE
	e.FIRST_NAME = 'Curtis';

-- 19. 부서번호가 60, 70, 80, 90인 사원들의 사원번호, FIRST_NAME, HIRE_DATE, JOB_ID 조회 단, JOB_ID가 IT_PROG일 경우 프로그래머로 변경하여 출력
SELECT
	E.EMPLOYEE_ID ,
	E.FIRST_NAME ,
	E.HIRE_DATE ,
	REPLACE(E.JOB_ID, 'IT_PROG', '프로그래머') AS "JOB_ID"
FROM
	EMPLOYEES e
WHERE
	E.DEPARTMENT_ID IN (60, 70, 80, 90); 

-- 20. JOB_ID가 AD_PRES, PU_CLERK인 사원들의 사원번호, FIRST_NAME, LAST_NAME, 부서번호, JOB_ID 조회 단, 사원명은 FIRST_NAME과 LAST_NAME을 연결하여 출력
SELECT
	E.EMPLOYEE_ID ,
	CONCAT(E.FIRST_NAME , concat(' ',E.LAST_NAME)) AS "사원명",
	E.DEPARTMENT_ID ,
	E.JOB_ID
FROM
	EMPLOYEES e
WHERE
	JOB_ID IN('AD_PRES','ST_CLERK'); 


